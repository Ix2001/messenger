#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è WebSocket API
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node test-websocket.js <JWT_TOKEN> <CHAT_ID>
 * 
 * –ü—Ä–∏–º–µ—Ä:
 * node test-websocket.js "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." "123e4567-e89b-12d3-a456-426614174000"
 */

const WebSocket = require('ws');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if (process.argv.length < 4) {
    console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-websocket.js <JWT_TOKEN> <CHAT_ID>');
    console.log('–ü—Ä–∏–º–µ—Ä: node test-websocket.js "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." "123e4567-e89b-12d3-a456-426614174000"');
    process.exit(1);
}

const jwtToken = process.argv[2];
const chatId = process.argv[3];

console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket API...');
console.log(`üìã Chat ID: ${chatId}`);
console.log(`üîë JWT Token: ${jwtToken.substring(0, 20)}...`);

// –°–æ–∑–¥–∞–Ω–∏–µ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
const ws = new WebSocket('ws://localhost:8080/ws');

ws.on('open', function open() {
    console.log('‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // STOMP CONNECT frame
    const connectFrame = {
        command: 'CONNECT',
        headers: {
            'Authorization': `Bearer ${jwtToken}`,
            'accept-version': '1.2',
            'heart-beat': '10000,10000'
        },
        body: ''
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ STOMP CONNECT...');
    ws.send(JSON.stringify(connectFrame));
});

ws.on('message', function message(data) {
    console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', data.toString());
    
    try {
        const frame = JSON.parse(data.toString());
        
        if (frame.command === 'CONNECTED') {
            console.log('‚úÖ STOMP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
            
            // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞
            const subscribeFrame = {
                command: 'SUBSCRIBE',
                headers: {
                    'id': 'sub-0',
                    'destination': `/topic/chat/${chatId}`
                },
                body: ''
            };
            
            console.log(`üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ–ø–∏–∫: /topic/chat/${chatId}`);
            ws.send(JSON.stringify(subscribeFrame));
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            setTimeout(() => {
                const sendFrame = {
                    command: 'SEND',
                    headers: {
                        'destination': `/app/chats/${chatId}/send`,
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        text: `–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${new Date().toISOString()}`
                    })
                };
                
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');
                ws.send(JSON.stringify(sendFrame));
            }, 1000);
            
        } else if (frame.command === 'MESSAGE') {
            console.log('üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ:', frame.body);
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –µ—â–µ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                const sendFrame = {
                    command: 'SEND',
                    headers: {
                        'destination': `/app/chats/${chatId}/send`,
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        text: `–û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${new Date().toISOString()}`
                    })
                };
                
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');
                ws.send(JSON.stringify(sendFrame));
            }, 2000);
            
        } else if (frame.command === 'ERROR') {
            console.error('‚ùå STOMP –æ—à–∏–±–∫–∞:', frame.body);
        }
        
    } catch (error) {
        console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ –Ω–µ-JSON —Å–æ–æ–±—â–µ–Ω–∏–µ:', data.toString());
    }
});

ws.on('error', function error(err) {
    console.error('‚ùå WebSocket –æ—à–∏–±–∫–∞:', err.message);
});

ws.on('close', function close() {
    console.log('üîå WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
process.on('SIGINT', function() {
    console.log('\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    ws.close();
    process.exit(0);
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
setTimeout(() => {
    console.log('‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...');
    ws.close();
    process.exit(0);
}, 10000);
